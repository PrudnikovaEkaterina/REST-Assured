plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'ru.prudnikova'
version '1.0-SNAPSHOT'

def allureVersion = "2.21.0"

repositories {
    mavenCentral()
}
allure {
    report { //секция репорта
        version(allureVersion)
    }
    adapter { //отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true)//Обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion)//версия интеграции фреймворка и Allure
            }
        }
    }
}
dependencies {
    testImplementation(
            'org.junit.jupiter:junit-jupiter:5.9.2',
            "com.codeborne:selenide:6.13.0",
            "io.rest-assured:rest-assured:5.3.0",
            'io.rest-assured:json-schema-validator:5.3.0',
            "com.fasterxml.jackson.core:jackson-databind:2.14.2",
            'org.slf4j:slf4j-simple:2.0.7',
            'com.github.javafaker:javafaker:1.0.2',
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.assertj:assertj-core:3.24.2"
    )
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }

    test {
        useJUnitPlatform()
    }
}
task ApiTest (type: Test) {
    useJUnitPlatform {
        includeTags("ApiTest")
    }
}
